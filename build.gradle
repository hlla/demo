// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'gradle/dependencies.gradle'
buildscript {
    ext.kotlin_version = '1.3.10'
    ext.kotlin_version = '1.2.71'
    repositories {
        google()
        jcenter()
        maven {
            credentials {
                username 'launcher_maven'
                password 'kingsoft'
            }
            url "http://10.60.80.74:8081/nexus/content/repositories/launchersdksnapshot"
        }
    }
    dependencies {
        classpath 'digital.wup:android-maven-publish:3.6.2'
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.1'
//        classpath 'com.android.tools.build:gradle:2.3.3'
//        classpath 'com.android.tools.build:gradle:2.1.3'
        // 配置自动上传符号表插件，注：为了能快速并准确地定位用户APP发生Crash的代码位置，Bugly使用符号表对APP发生Crash的程序堆栈进行解析和还原
//        classpath 'com.tencent.bugly:symtabfileuploader:1.3.9'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.11'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
//Project
//buildscript {
//    repositories {
//        jcenter()
//    }
////    dependencies {
////        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.3'
////    }
//}
allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            credentials {
                username 'launcher_maven'
                password 'kingsoft'
            }
            url "http://10.60.80.74:8081/nexus/content/repositories/launchersdksnapshot"
        }
        maven {
            url "http://103.69.155.99:8081/nexus/content/repositories/cleanmastersnapshot/"
            credentials {
                username 'cleanmaster_maven'
                password 'kingsoft'
            }
        }
        maven {
            url "http://103.69.155.99:8081/nexus/content/repositories/cleanmasterrelease/"
            credentials {
                username 'cleanmaster_maven'
                password 'kingsoft'
            }
        }
        maven {
            url "http://103.69.155.99:8081/nexus/content/repositories/releases"
        }
        maven {
            credentials {
                username 'launcher_maven'
                password 'kingsoft'
            }
            url "http://103.69.155.99:8081/nexus/content/repositories/launchersdksnapshot"
        }
        maven {
            credentials {
                username 'launcher_maven'
                password 'kingsoft'
            }
            url "http://103.69.155.99:8081/nexus/content/repositories/launchersdkrel"
        }
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.fabric.io/public' }
    }
//    plugins.apply('checkstyle')
//
//    task('checkstyle', type: Checkstyle) {
//        configFile rootProject.file('checkstyle.xml')
//        source 'src/main/java'
//        ignoreFailures false
//        showViolations true
//        include '**/*.java'
//
//        classpath = files()
//    }
//
//    group = GROUP
//    version = VERSION_NAME
//
//    afterEvaluate {
//        tasks.findByName('check').dependsOn('checkstyle')
//    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            if (!project.name.equals("notificationlib")
                    && !project.name.equals("launcher")
                    && !project.name.equals("notificationmessagelib")
                    && !project.name.equals("locker")
                    && !project.name.equals("ncmanagerlib")
                    && !project.name.equals("dialer")
                    && !project.name.equals("leakcanary")) {
                options.compilerArgs << '-Xbootclasspath/p:./Testanr/libs/layoutlib.jar'
            }
        }
    }
}

def supportVersion = "23.4.0"
ext {
    minSdkVersion = 16
    compileSdkVersion = 28
    targetSdkVersion = compileSdkVersion
    supportLibVersion = "25.4.0"
    javaVersion = JavaVersion.VERSION_1_7

    defaultsToPrivateOnly = true

    GROUP = 'com.tencent'
    VERSION_NAME = "${VERSION_NAME_PREFIX}${VERSION_NAME_SUFFIX}"

    POM_PACKAGING = "pom"
    POM_DESCRIPTION = "MMKV for Android"

    POM_URL = "https://github.com/Tencent/MMKV"
    POM_SCM_URL = "https://github.com/Tencent/MMKV.git"
    POM_ISSUE_URL = 'https://github.com/Tencent/MMKV/issues'

    POM_LICENCE_NAME = "BSD License"
    POM_LICENCE_URL = "https://opensource.org/licenses/BSD-3-Clause"
    POM_LICENCE_DIST = "repo"

    POM_DEVELOPER_ID = "Tencent Wechat"
    POM_DEVELOPER_NAME = "Tencent Wechat, Inc."

    BINTRAY_LICENCE = ['BSD 3-Clause']
    BINTRAY_ORGANIZATION = "wemobiledev"
}
project.ext {
    compile = [
            highCompileSdkVersion: 23,
            compileSdkVersion    : 23,
            minSdkVersion        : 15,
            targetSdkVersion     : 19,
            highTargetSdkVersion : 23,
            highBuildToolsVersion: "25.0.3",
            buildToolsVersion    : "25.0.3",
            platformVersion      : "android-21",
            applicationId        : "com.ksmobile.launcher",
            lockerapplicationId  : "com.cmcm.locker"
    ]
    ext {
        // Sdk and tools
        // Support library and architecture components support minSdk 14 and above.
        minSdkVersion = 14
        targetSdkVersion = 26
        compileSdkVersion = 26
        buildToolsVersion = '26.0.2'

        // App dependencies
        supportLibraryVersion = '26.1.0'
        guavaVersion = '18.0'
        junitVersion = '4.12'
        mockitoVersion = '1.10.19'
        powerMockito = '1.6.2'
        hamcrestVersion = '1.3'
        runnerVersion = '1.0.1'
        rulesVersion = '1.0.1'
        espressoVersion = '3.0.1'
        roomVersion = "1.0.0"
    }
    /*
    	locker compile
    	compile = [
            highCompileSdkVersion: 23,
            compileSdkVersion    : 23,
            minSdkVersion        : 15,
            targetSdkVersion     : 21,
            highBuildToolsVersion: "23.0.3",
            buildToolsVersion    : "23.0.3",
            platformVersion      : "android-21",
            applicationId        : "com.cmcm.locker"
    ]

    */

    support = [
            "support-v4"    : "com.android.support:support-v4:${supportVersion}",
            "recyclerview"  : "com.android.support:recyclerview-v7:${supportVersion}",
            "cardview"      : "com.android.support:cardview-v7:${supportVersion}",
            "design"        : "com.android.support:design:${supportVersion}",
            "appcompact"    : "com.android.support:appcompat-v7:${supportVersion}",
            "annotations"   : "com.android.support:support-annotations:${supportVersion}",
            "rxandroid"     : "io.reactivex:rxandroid:1.2.1",
            "rxjava"        : "io.reactivex:rxjava:1.2.5",
            "rxjavaproguard": "com.artemzin.rxjava:proguard-rules:1.2.5.1",
            "eventbus"      : "org.greenrobot:eventbus:3.0.0",
            "glview"        : "com.cmcm.launcher:glview:4.0.0.206111-SNAPSHOT",
            "glengine"      : "com.cmcm.launcher:EngineParser:3.3.2.15@aar"
    ]

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
